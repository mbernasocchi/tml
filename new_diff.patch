diff --git a/modules/custom-email/admin/custom-email-admin.php b/modules/custom-email/admin/custom-email-admin.php
index bfe19ab..f0f12cc 100644
--- a/modules/custom-email/admin/custom-email-admin.php
+++ b/modules/custom-email/admin/custom-email-admin.php
@@ -105,7 +105,9 @@ class Theme_My_Login_Custom_Email_Admin extends Theme_My_Login_Abstract {
 		if ( class_exists( 'Theme_My_Login_User_Moderation' ) ) {
 			add_meta_box( 'user_activation',     __( 'User Activation',     'theme-my-login' ), array( &$this, 'user_activation_meta_box' ),     'tml_page_' . $this->options_key, 'normal' );
 			add_meta_box( 'user_approval',       __( 'User Approval',       'theme-my-login' ), array( &$this, 'user_approval_meta_box' ),       'tml_page_' . $this->options_key, 'normal' );
-			add_meta_box( 'user_approval_admin', __( 'User Approval Admin', 'theme-my-login'),  array( &$this, 'user_approval_admin_meta_box' ), 'tml_page_' . $this->options_key, 'normal' );
+			add_meta_box( 'user_approval_admin', __( 'User Approval Admin', 'theme-my-login' ), array( &$this, 'user_approval_admin_meta_box' ), 'tml_page_' . $this->options_key, 'normal' );
+			add_meta_box( 'user_wphook',         __( 'User WP hook Approval',        'theme-my-login' ), array( &$this, 'user_wphook_meta_box' ),         'tml_page_' . $this->options_key, 'normal' );
+			add_meta_box( 'user_wphook_admin',   __( 'User WP hook Approval Admin',  'theme-my-login' ), array( &$this, 'user_wphook_admin_meta_box' ),   'tml_page_' . $this->options_key, 'normal' );
 			add_meta_box( 'user_denial',         __( 'User Denial',         'theme-my-login' ), array( &$this, 'user_denial_meta_box' ),         'tml_page_' . $this->options_key, 'normal' );
 		}
 	}
@@ -529,6 +531,112 @@ class Theme_My_Login_Custom_Email_Admin extends Theme_My_Login_Abstract {
 		</table>
 		<?php
 	}
+	
+	/**
+	 * Renders User WP Hook approval settings section
+	 *
+	 * This is the callback for add_meta_box()
+	 *
+	 * @since 6.3.5-BP
+	 * @access public
+	 */
+	public function user_wphook_meta_box() {
+		?>
+		<p class="description">
+			<?php _e( 'This e-mail will be sent to a new user upon WP hook approval when "WP hook Approval" is checked for "User Moderation".', 'theme-my-login' ); ?>
+			<?php _e( 'Please be sure to include the variable %user_pass% if using default passwords or else the user will not know their password!', 'theme-my-login' ); ?>
+			<?php _e( 'If any field is left empty, the default will be used instead.', 'theme-my-login' ); ?>
+		</p>
+		<table class="form-table">
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_mail_from_name"><?php _e( 'From Name', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][mail_from_name]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_mail_from_name" value="<?php echo $this->get_option( array( 'user_wphook', 'mail_from_name' ) ); ?>" class="regular-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_mail_from"><?php _e( 'From E-mail', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][mail_from]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_mail_from" value="<?php echo $this->get_option( array( 'user_wphook', 'mail_from' ) ); ?>" class="regular-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_mail_content_type"><?php _e( 'E-mail Format', 'theme-my-login' ); ?></label></th>
+				<td>
+					<select name="<?php echo $this->options_key; ?>[user_wphook][mail_content_type]" id="<?php echo $this->options_key; ?>_user_wphook_mail_content_type">
+						<option value="plain"<?php selected( $this->get_option( array( 'user_wphook', 'mail_content_type' ) ), 'plain' ); ?>><?php _e( 'Plain Text', 'theme-my-login' ); ?></option>
+						<option value="html"<?php  selected( $this->get_option( array( 'user_wphook', 'mail_content_type' ) ), 'html' ); ?>><?php  _e( 'HTML', 'theme-my-login' ); ?></option>
+					</select>
+				</td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_title"><?php _e( 'Subject', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][title]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_title" value="<?php echo $this->get_option( array( 'user_wphook', 'title' ) ); ?>" class="large-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_message"><?php _e( 'Message', 'theme-my-login' ); ?></label></th>
+				<td>
+					<p class="description"><?php _e( 'Available Variables', 'theme-my-login' ); ?>: %blogname%, %siteurl%, %loginurl%, %user_login%, %user_email%, %user_pass%</p>
+					<textarea name="<?php echo $this->options_key; ?>[user_wphook][message]" id="<?php echo $this->options_key; ?>_user_wphook_message" class="large-text" rows="10"><?php echo $this->get_option( array( 'user_wphook', 'message' ) ); ?></textarea></td>
+				</td>
+			</tr>
+		</table>
+		<?php
+	}
+
+	/**
+	 * Renders User WP Hook Approval Admin settings section
+	 *
+	 * This is the callback for add_meta_box()
+	 *
+	 * @since 6.3.5-BP
+	 * @access public
+	 */
+	public function user_wphook_admin_meta_box() {
+		?>
+		<p class="description">
+			<?php _e( 'This e-mail will be sent to the e-mail address or addresses (multiple addresses may be separated by commas) specified below upon user registration when "WP Hook Approval" is checked for "User Moderation".', 'theme-my-login' ); ?>
+			<?php _e( 'If any field is left empty, the default will be used instead.', 'theme-my-login' ); ?>
+		</p>
+		<table class="form-table">
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_admin_mail_to"><?php _e( 'To', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][admin_mail_to]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_admin_mail_to" value="<?php echo $this->get_option( array( 'user_wphook', 'admin_mail_to' ) ); ?>" class="regular-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_admin_mail_from_name"><?php _e( 'From Name', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][admin_mail_from_name]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_admin_mail_from_name" value="<?php echo $this->get_option( array( 'user_wphook', 'admin_mail_from_name' ) ); ?>" class="regular-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_admin_mail_from"><?php _e( 'From E-mail', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][admin_mail_from]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_admin_mail_from" value="<?php echo $this->get_option( array( 'user_wphook', 'admin_mail_from' ) ); ?>" class="regular-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_admin_mail_content_type"><?php _e( 'E-mail Format', 'theme-my-login' ); ?></label></th>
+				<td>
+					<select name="<?php echo $this->options_key; ?>[user_wphook][admin_mail_content_type]" id="<?php echo $this->options_key; ?>_user_wphook_admin_mail_content_type">
+						<option value="plain"<?php selected( $this->get_option( array( 'user_wphook', 'mail_content_type' ) ), 'plain' ); ?>><?php _e( 'Plain Text', 'theme-my-login' ); ?></option>
+						<option value="html"<?php  selected( $this->get_option( array( 'user_wphook', 'mail_content_type' ) ), 'html' ); ?>><?php  _e( 'HTML', 'theme-my-login' ); ?></option>
+					</select>
+				</td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_admin_title"><?php _e( 'Subject', 'theme-my-login' ); ?></label></th>
+				<td><input name="<?php echo $this->options_key; ?>[user_wphook][admin_title]" type="text" id="<?php echo $this->options_key; ?>_user_wphook_admin_title" value="<?php echo $this->get_option( array( 'user_wphook', 'admin_title' ) ); ?>" class="large-text" /></td>
+			</tr>
+			<tr valign="top">
+				<th scope="row"><label for="<?php echo $this->options_key; ?>_user_wphook_admin_message"><?php _e( 'Message', 'theme-my-login' ); ?></label></th>
+				<td>
+					<p class="description"><?php _e( 'Available Variables', 'theme-my-login' ); ?>: %blogname%, %siteurl%, %pendingurl%, %user_login%, %user_email%, %user_ip%</p>
+					<textarea name="<?php echo $this->options_key; ?>[user_wphook][admin_message]" id="<?php echo $this->options_key; ?>_user_wphook_admin_message" class="large-text" rows="10"><?php echo $this->get_option( array( 'user_wphook', 'admin_message' ) ); ?></textarea></td>
+				</td>
+			</tr>
+			<tr valign="top">
+				<th scope="row">&nbsp;</th>
+				<td>
+					<input name="<?php echo $this->options_key; ?>[user_wphook][admin_disable]" type="checkbox" id="<?php echo $this->options_key; ?>_user_wphook_admin_disable" value="1"<?php checked( 1, $this->get_option( array( 'user_wphook', 'admin_disable' ) ) ); ?> />
+					<label for="<?php echo $this->options_key; ?>_user_wphook_admin_disable"><?php _e( 'Disable Admin Notification', 'theme-my-login' ); ?></label>
+				</td>
+			</tr>
+		</table>
+		<?php
+	}
 
 	/**
 	 * Renders User Denial settings section
diff --git a/modules/custom-email/custom-email.php b/modules/custom-email/custom-email.php
index 250f946..cfdaf4c 100644
--- a/modules/custom-email/custom-email.php
+++ b/modules/custom-email/custom-email.php
@@ -553,9 +553,31 @@ class Theme_My_Login_Custom_Email extends Theme_My_Login_Abstract {
 					$this->get_option( array( 'user_approval', 'admin_mail_from_name'    ) ),
 					$this->get_option( array( 'user_approval', 'admin_mail_content_type' ) )
 				);
-				add_filter( 'user_approval_admin_notifcation_mail_to',  array( &$this, 'user_approval_admin_notifcation_mail_to_filter'  )        );
+				add_filter( 'user_approval_admin_notification_mail_to',  array( &$this, 'user_approval_admin_notification_mail_to_filter'  )        );
 				add_filter( 'user_approval_admin_notification_title',   array( &$this, 'user_approval_admin_notification_title_filter'   ), 10, 2 );
 				add_filter( 'user_approval_admin_notification_message', array( &$this, 'user_approval_admin_notification_message_filter' ), 10, 2 );
+				add_filter( 'user_wphook_notification_title',   array( &$this, 'user_wphook_notification_title_filter'   ), 10, 2 );
+				add_filter( 'user_wphook_notification_message', array( &$this, 'user_wphook_notification_message_filter' ), 10, 2 );
+				break;
+			case 'wphook' :
+			  //send to client
+			  $this->set_mail_headers(
+					$this->get_option( array( 'user_wphook', 'mail_from'         ) ),
+					$this->get_option( array( 'user_wphook', 'mail_from_name'    ) ),
+					$this->get_option( array( 'user_wphook', 'mail_content_type' ) )
+				);
+				add_filter( 'user_wphook_notification_title',   array( &$this, 'user_wphook_notification_title_filter'   ), 10, 2 );
+				add_filter( 'user_wphook_notification_message', array( &$this, 'user_wphook_notification_message_filter' ), 10, 2 );
+
+			  //send to admin
+				$this->set_mail_headers(
+					$this->get_option( array( 'user_wphook', 'admin_mail_from'         ) ),
+					$this->get_option( array( 'user_wphook', 'admin_mail_from_name'    ) ),
+					$this->get_option( array( 'user_wphook', 'admin_mail_content_type' ) )
+				);
+				add_filter( 'user_wphook_admin_notifcation_mail_to',  array( &$this, 'user_wphook_admin_notifcation_mail_to_filter'  )        );
+				add_filter( 'user_wphook_admin_notification_title',   array( &$this, 'user_wphook_admin_notification_title_filter'   ), 10, 2 );
+				add_filter( 'user_wphook_admin_notification_message', array( &$this, 'user_wphook_admin_notification_message_filter' ), 10, 2 );
 				break;
 		}
 	}
@@ -695,7 +717,7 @@ class Theme_My_Login_Custom_Email extends Theme_My_Login_Abstract {
 	 * @param string $to The default recipient
 	 * @return string The filtered recipient
 	 */
-	public function user_approval_admin_notifcation_mail_to_filter( $to ) {
+	public function user_approval_admin_notification_mail_to_filter( $to ) {
 		$_to = $this->get_option( array( 'user_approval', 'admin_mail_to' ) );
 		return empty( $_to ) ? $to : $_to;
 	}
@@ -740,6 +762,106 @@ class Theme_My_Login_Custom_Email extends Theme_My_Login_Abstract {
 		}
 		return $message;
 	}
+	
+	/**
+	 * Changes the user activation e-mail subject
+	 *
+	 * Callback for "user_activation_notification_title" hook in Theme_My_Login_User_Moderation::new_user_activation_notification()
+	 *
+	 * @see Theme_My_Login_User_Moderation::new_user_activation_notification()
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param string $title The default subject
+	 * @param int $user_id The user's ID
+	 * @return string The filtered subject
+	 */
+	public function user_wphook_notification_title_filter( $title, $user_id ) {
+		$_title = $this->get_option( array( 'user_wphook', 'title' ) );
+		return empty( $_title ) ? $title : Theme_My_Login_Common::replace_vars( $_title, $user_id );
+	}
+
+	/**
+	 * Changes the user activation e-mail message
+	 *
+	 * Callback for "user_activation_notification_message" hook in Theme_My_Login_User_Moderation::new_user_activation_notification()
+	 *
+	 * @see Theme_My_Login_User_Moderation::new_user_activation_notification()
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param string $title The default message
+	 * @param int $user_id The user's ID
+	 * @param string $activation_url The activation URL
+	 * @return string The filtered message
+	 */
+	public function user_wphook_notification_message_filter( $message, $user_id ) {
+		$_message = $this->get_option( array( 'user_wphook', 'message' ) );
+		if ( ! empty( $_message ) ) {
+			$message = Theme_My_Login_Common::replace_vars( $_message, $user_id, array(
+				'%activateurl%' => $activation_url
+			) );
+		}
+		return $message;
+	}
+	
+	/**
+	 * Changes the user wphook admin e-mail recipient
+	 *
+	 * Callback for "user_wphook_admin_notification_mail_to" hook in Theme_My_Login_User_Moderation::new_user_wphook_admin_notification()
+	 *
+	 * @see Theme_My_Login_User_Moderation::new_user_wphook_admin_notification()
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param string $to The default recipient
+	 * @return string The filtered recipient
+	 */
+	public function user_wphook_admin_notification_mail_to_filter( $to ) {
+		$_to = $this->get_option( array( 'user_wphook', 'admin_mail_to' ) );
+		return empty( $_to ) ? $to : $_to;
+	}
+
+	/**
+	 * Changes the user wphook admin e-mail subject
+	 *
+	 * Callback for "user_wphook_admin_notification_title" hook in Theme_My_Login_User_Moderation::new_user_wphook_admin_notification()
+	 *
+	 * @see Theme_My_Login_User_Moderation::new_user_wphook_admin_notification()
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param string $title The default subject
+	 * @param int $user_id The user's ID
+	 * @return string The filtered subject
+	 */
+	public function user_wphook_admin_notification_title_filter( $title, $user_id ) {
+		$_title = $this->get_option( array( 'user_wphook', 'admin_title' ) );
+		return empty( $_title ) ? $title : Theme_My_Login_Common::replace_vars( $_title, $user_id );
+	}
+
+	/**
+	 * Changes the user wphook admin e-mail message
+	 *
+	 * Callback for "user_wphook_admin_notification_message" hook in Theme_My_Login_User_Moderation::new_user_wphook_admin_notification()
+	 *
+	 * @see Theme_My_Login_User_Moderation::new_user_wphook_admin_notification()
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param string $message The default message
+	 * @param int $user_id The user's ID
+	 * @return string The filtered message
+	 */
+	public function user_wphook_admin_notification_message_filter( $message, $user_id ) {
+		$_message = $this->get_option( array( 'user_wphook', 'admin_message' ) );
+		if ( ! empty( $_message ) ) {
+			$message = Theme_My_Login_Common::replace_vars( $_message, $user_id, array(
+				'%pendingurl%' => admin_url( 'users.php?role=pending' )
+			) );
+		}
+		return $message;
+	}
 
 	/**
 	 * Changes the user denial e-mail subject
diff --git a/modules/user-moderation/admin/user-moderation-admin.php b/modules/user-moderation/admin/user-moderation-admin.php
index 9e9085b..2c5e2d4 100644
--- a/modules/user-moderation/admin/user-moderation-admin.php
+++ b/modules/user-moderation/admin/user-moderation-admin.php
@@ -189,6 +189,10 @@ class Theme_My_Login_User_Moderation_Admin extends Theme_My_Login_Abstract {
 		<input name="<?php echo $this->options_key; ?>[type]" type="radio" id="<?php echo $this->options_key; ?>_type_admin" value="admin" <?php checked( $this->get_option( 'type' ), 'admin' ); ?> />
 		<label for="<?php echo $this->options_key; ?>_type_admin"><?php _e( 'Admin Approval', 'theme-my-login' ); ?></label>
 		<p class="description"><?php _e( 'Check this option to require new users to be approved by an administrator before they may log in.', 'theme-my-login' ); ?></p>
+		
+		<input name="<?php echo $this->options_key; ?>[type]" type="radio" id="<?php echo $this->options_key; ?>_type_wphook" value="wphook" <?php checked( $this->get_option( 'type' ), 'wphook' ); ?> />
+		<label for="<?php echo $this->options_key; ?>_type_wphook"><?php _e( 'WP hook Approval', 'theme-my-login' ); ?></label>
+		<p class="description"><?php _e( 'Check this option to require new users to be approved by a custom Wordpress hook before they may log in.', 'theme-my-login' ); ?></p>
 		<?php
 	}
 
@@ -203,7 +207,7 @@ class Theme_My_Login_User_Moderation_Admin extends Theme_My_Login_Abstract {
 	 */
 	public function save_settings( $settings ) {
 		return array(
-			'type' => in_array( $settings['type'], array( 'none', 'email', 'admin' ) ) ? $settings['type'] : 'none'
+			'type' => in_array( $settings['type'], array( 'none', 'email', 'admin', 'wphook' ) ) ? $settings['type'] : 'none'
 		);
 	}
 
diff --git a/modules/user-moderation/user-moderation.php b/modules/user-moderation/user-moderation.php
index 56e4e2d..2cb3fc9 100644
--- a/modules/user-moderation/user-moderation.php
+++ b/modules/user-moderation/user-moderation.php
@@ -202,6 +202,9 @@ class Theme_My_Login_User_Moderation extends Theme_My_Login_Abstract {
 				case 'approval' :
 					$theme_my_login->errors->add( 'pending_approval', __( 'Your registration was successful but you must now be approved by an administrator before you can log in. You will be notified by e-mail once your account has been reviewed.', 'theme-my-login' ), 'message' );
 					break;
+				case 'wphook' :
+					$theme_my_login->errors->add( 'pending_approval', __( 'Your registration was successful but you must now be approved by paying your subscription. You will be notified by e-mail once your account has been activated.', 'theme-my-login' ), 'message' );
+					break;
 			}
 		}
 
@@ -273,6 +276,11 @@ class Theme_My_Login_User_Moderation extends Theme_My_Login_Abstract {
 		} elseif ( 'admin' == $this->get_option( 'type' ) ) {
 			// Send approval e-mail
 			self::new_user_approval_admin_notification( $user_id );
+			self::new_user_wphook_notification( $user_id );
+		} elseif ( 'wphook' == $this->get_option( 'type' ) ) {
+			// Send approval e-mail
+			self::new_user_wphook_notification( $user_id );
+			self::new_user_wphook_admin_notification( $user_id );
 		}
 	}
 
@@ -485,7 +493,79 @@ class Theme_My_Login_User_Moderation extends Theme_My_Login_Abstract {
 		$title   = apply_filters( 'user_approval_admin_notification_title',   $title,   $user_id );
 		$message = apply_filters( 'user_approval_admin_notification_message', $message, $user_id );
 
-		$to = apply_filters( 'user_approval_admin_notifcation_mail_to', get_option( 'admin_email' ) );
+		$to = apply_filters( 'user_approval_admin_notification_mail_to', get_option( 'admin_email' ) );
+
+		@wp_mail( $to, $title, $message );
+	}
+	
+	/**
+	 * Notifies a pending user to activate their account
+	 *
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param int $user_id The user's ID
+	 */
+	public static function new_user_wphook_notification( $user_id) {
+		global $wpdb, $current_site;
+
+		$user = new WP_User( $user_id );
+
+		$user_login = stripslashes( $user->user_login );
+		$user_email = stripslashes( $user->user_email );
+
+		if ( is_multisite() ) {
+			$blogname = $current_site->site_name;
+		} else {
+			// The blogname option is escaped with esc_html on the way into the database in sanitize_option
+			// we want to reverse this for the plain text arena of emails.
+			$blogname = wp_specialchars_decode( get_option( 'blogname' ), ENT_QUOTES );
+		}			
+
+		$title    = sprintf( __( '[%s] Activate Your Account', 'theme-my-login' ), $blogname );
+		$message  = sprintf( __( 'Thanks for registering at %s! Please pay to complete the subscription ', 'theme-my-login' ), $blogname ) . "\r\n\r\n";
+    
+		$title   = apply_filters( 'user_wphook_notification_title',   $title,   $user_id );
+		$message = apply_filters( 'user_wphook_notification_message', $message, $user_id );
+		return wp_mail( $user_email, $title, $message );
+	}
+	
+	/**
+	 * Notifies the administrator of a pending user needing hook approval
+	 *
+	 * @since 6.3.5-BP
+	 * @access public
+	 *
+	 * @param int $user_id The user's ID
+	 */
+	public static function new_user_wphook_admin_notification( $user_id ) {
+		global $current_site;
+
+		$user = new WP_User( $user_id );
+
+		$user_login = stripslashes( $user->user_login );
+		$user_email = stripslashes( $user->user_email );
+
+		if ( is_multisite() ) {
+			$blogname = $current_site->site_name;
+		} else {
+			// The blogname option is escaped with esc_html on the way into the database in sanitize_option
+			// we want to reverse this for the plain text arena of emails.
+			$blogname = wp_specialchars_decode( get_option( 'blogname' ), ENT_QUOTES );
+		}
+
+		$title = sprintf( __( '[%s] New User Awaiting Payment', 'theme-my-login' ), $blogname );
+
+		$message  = sprintf( __( 'New user subscribed on your blog %s:', 'theme-my-login' ), $blogname ) . "\r\n\r\n";
+		$message .= sprintf( __( 'Username: %s', 'theme-my-login' ), $user_login ) . "\r\n";
+		$message .= sprintf( __( 'E-mail: %s', 'theme-my-login' ), $user_email ) . "\r\n\r\n";
+		$message .= __( 'To approve or deny this user:', 'theme-my-login' ) . "\r\n";
+		$message .= admin_url( 'users.php?role=pending' );
+
+		$title   = apply_filters( 'user_wphook_admin_notification_title',   $title,   $user_id );
+		$message = apply_filters( 'user_wphook_admin_notification_message', $message, $user_id );
+
+		$to = apply_filters( 'user_wphook_admin_notification_mail_to', get_option( 'admin_email' ) );
 
 		@wp_mail( $to, $title, $message );
 	}
